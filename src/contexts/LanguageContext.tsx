import React, { createContext, useContext, useState } from 'react';

interface LanguageContextType {
  language: 'en' | 'hi';
  toggleLanguage: () => void;
  t: (key: string) => string;
}

const translations = {
  en: {
    // Header
    'header.title': 'SATARK.AI',
    'header.subtitle': 'Ministry of Statistics & Programme Implementation',
    'header.login': 'Login',
    'header.demo': 'Demo',
    
    // Hero Section
    'hero.title': 'SATARK.AI тАУ India\'s First AI-Powered Survey Intelligence System',
    'hero.subtitle': 'Making Indian government surveys faster, fairer, and future-ready.',
    'hero.admin_login': 'ЁЯФР Login as Admin',
    'hero.agent_login': 'ЁЯзСтАНЁЯМ╛ Login as Field Agent',
    'hero.demo': 'ЁЯУШ View Demo',
    
    // Problem Solution
    'problem.title': 'Challenges in Traditional Surveys',
    'problem.delay': 'Long processing delays',
    'problem.paper': 'Paper-based inefficiencies',
    'problem.errors': 'Manual data entry errors',
    'problem.literacy': 'Language & literacy barriers',
    
    'solution.title': 'SATARK.AI Solutions',
    'solution.ai': 'AI-powered survey generation',
    'solution.whatsapp': 'WhatsApp & voice input',
    'solution.ocr': 'Smart document scanning',
    'solution.storage': 'Federated secure storage',
    
    // Stats
    'stats.surveys': 'Surveys Created',
    'stats.districts': 'Districts Onboarded',
    'stats.turnaround': 'Avg Turnaround',
    'stats.hours': 'hours',
    
    // Footer
    'footer.built': 'Built by Team Yukt for MoSPI Statathon 2025',
    'footer.contact': 'Contact: team.yukt@gov.in',
    
    // Login
    'login.title': 'Login to SATARK.AI',
    'login.role': 'Select Role',
    'login.admin': 'Government Official / Admin',
    'login.agent': 'Field Agent',
    'login.email': 'Email Address',
    'login.password': 'Password',
    'login.submit': 'Login',
    'login.register': 'Register as Field Agent',
    
    // Dashboard
    'dashboard.welcome': 'Welcome back',
    'dashboard.overview': 'System Overview',
  },
  hi: {
    // Header
    'header.title': 'рд╕рддрд░реНрдХ.AI',
    'header.subtitle': 'рд╕рд╛рдВрдЦреНрдпрд┐рдХреА рдФрд░ рдХрд╛рд░реНрдпрдХреНрд░рдо рдХрд╛рд░реНрдпрд╛рдиреНрд╡рдпрди рдордВрддреНрд░рд╛рд▓рдп',
    'header.login': 'рд▓реЙрдЧрд┐рди',
    'header.demo': 'рдбреЗрдореЛ',
    
    // Hero Section
    'hero.title': 'рд╕рддрд░реНрдХ.AI тАУ рднрд╛рд░рдд рдХреА рдкрд╣рд▓реА AI-рд╕рдХреНрд╖рдо рд╕рд░реНрд╡реЗ рдкреНрд░рдгрд╛рд▓реА',
    'hero.subtitle': 'рднрд╛рд░рддреАрдп рд╕рд░рдХрд╛рд░реА рд╕рд░реНрд╡реЗрдХреНрд╖рдгреЛрдВ рдХреЛ рддреЗрдЬрд╝, рдирд┐рд╖реНрдкрдХреНрд╖ рдФрд░ рднрд╡рд┐рд╖реНрдп рдХреЗ рд▓рд┐рдП рддреИрдпрд╛рд░ рдмрдирд╛рдирд╛ред',
    'hero.admin_login': 'ЁЯФР рдПрдбрдорд┐рди рд▓реЙрдЧрд┐рди',
    'hero.agent_login': 'ЁЯзСтАНЁЯМ╛ рдлреАрд▓реНрдб рдПрдЬреЗрдВрдЯ рд▓реЙрдЧрд┐рди',
    'hero.demo': 'ЁЯУШ рдбреЗрдореЛ рджреЗрдЦреЗрдВ',
    
    // Problem Solution
    'problem.title': 'рдкрд╛рд░рдВрдкрд░рд┐рдХ рд╕рд░реНрд╡реЗрдХреНрд╖рдгреЛрдВ рдореЗрдВ рдЪреБрдиреМрддрд┐рдпрд╛рдВ',
    'problem.delay': 'рд▓рдВрдмреА рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рджреЗрд░реА',
    'problem.paper': 'рдХрд╛рдЧрдЬрд╝-рдЖрдзрд╛рд░рд┐рдд рдЕрдХреНрд╖рдорддрд╛рдПрдВ',
    'problem.errors': 'рдореИрдиреБрдЕрд▓ рдбреЗрдЯрд╛ рдПрдВрдЯреНрд░реА рддреНрд░реБрдЯрд┐рдпрд╛рдВ',
    'problem.literacy': 'рднрд╛рд╖рд╛ рдФрд░ рд╕рд╛рдХреНрд╖рд░рддрд╛ рдмрд╛рдзрд╛рдПрдВ',
    
    'solution.title': 'рд╕рддрд░реНрдХ.AI рд╕рдорд╛рдзрд╛рди',
    'solution.ai': 'AI-рд╕рдВрдЪрд╛рд▓рд┐рдд рд╕рд░реНрд╡реЗрдХреНрд╖рдг рдирд┐рд░реНрдорд╛рдг',
    'solution.whatsapp': 'рд╡реНрд╣рд╛рдЯреНрд╕рдРрдк рдФрд░ рдЖрд╡рд╛рдЬрд╝ рдЗрдирдкреБрдЯ',
    'solution.ocr': 'рд╕реНрдорд╛рд░реНрдЯ рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рд╕реНрдХреИрдирд┐рдВрдЧ',
    'solution.storage': 'рд╕рдВрдШреАрдп рд╕реБрд░рдХреНрд╖рд┐рдд рднрдВрдбрд╛рд░рдг',
    
    // Stats
    'stats.surveys': 'рд╕рд░реНрд╡реЗрдХреНрд╖рдг рдмрдирд╛рдП рдЧрдП',
    'stats.districts': 'рдЬрд┐рд▓реЗ рд╢рд╛рдорд┐рд▓',
    'stats.turnaround': 'рдФрд╕рдд рд╕рдордп',
    'stats.hours': 'рдШрдВрдЯреЗ',
    
    // Footer
    'footer.built': 'рдЯреАрдо рдпреБрдХреНрдд рджреНрд╡рд╛рд░рд╛ MoSPI рд╕реНрдЯреЗрдЯрд╛рдереЙрди 2025 рдХреЗ рд▓рд┐рдП рдирд┐рд░реНрдорд┐рдд',
    'footer.contact': 'рд╕рдВрдкрд░реНрдХ: team.yukt@gov.in',
    
    // Login
    'login.title': 'рд╕рддрд░реНрдХ.AI рдореЗрдВ рд▓реЙрдЧрд┐рди рдХрд░реЗрдВ',
    'login.role': 'рднреВрдорд┐рдХрд╛ рдЪреБрдиреЗрдВ',
    'login.admin': 'рд╕рд░рдХрд╛рд░реА рдЕрдзрд┐рдХрд╛рд░реА / рдПрдбрдорд┐рди',
    'login.agent': 'рдлреАрд▓реНрдб рдПрдЬреЗрдВрдЯ',
    'login.email': 'рдИрдореЗрд▓ рдкрддрд╛',
    'login.password': 'рдкрд╛рд╕рд╡рд░реНрдб',
    'login.submit': 'рд▓реЙрдЧрд┐рди',
    'login.register': 'рдлреАрд▓реНрдб рдПрдЬреЗрдВрдЯ рдХреЗ рд░реВрдк рдореЗрдВ рдкрдВрдЬреАрдХрд░рдг',
    
    // Dashboard
    'dashboard.welcome': 'рд╡рд╛рдкрд╕реА рдкрд░ рд╕реНрд╡рд╛рдЧрдд',
    'dashboard.overview': 'рд╕рд┐рд╕реНрдЯрдо рдЕрд╡рд▓реЛрдХрди',
  }
};

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

export const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const [language, setLanguage] = useState<'en' | 'hi'>('en');

  const toggleLanguage = () => {
    setLanguage(prev => prev === 'en' ? 'hi' : 'en');
  };

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations['en']] || key;
  };

  return (
    <LanguageContext.Provider value={{ language, toggleLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};